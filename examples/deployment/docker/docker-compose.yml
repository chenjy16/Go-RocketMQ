# Go-RocketMQ Docker Compose 部署配置
# 本配置文件用于快速部署一个完整的RocketMQ集群

version: '3.8'

services:
  # NameServer 服务
  nameserver:
    image: go-rocketmq:latest
    container_name: rocketmq-nameserver
    command: ["/app/nameserver"]
    ports:
      - "9876:9876"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=0.0.0.0:9876
      - ROCKETMQ_LOG_LEVEL=INFO
    volumes:
      - nameserver_logs:/var/log/rocketmq
      - ./config/nameserver.conf:/etc/rocketmq/nameserver.conf:ro
    networks:
      - rocketmq-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9876"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Broker-A 主节点
  broker-a:
    image: go-rocketmq:latest
    container_name: rocketmq-broker-a
    command: ["/app/broker", "-c", "/etc/rocketmq/broker-a.conf"]
    ports:
      - "10911:10911"
      - "10912:10912"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - ROCKETMQ_BROKER_NAME=broker-a
      - ROCKETMQ_BROKER_ID=0
      - ROCKETMQ_BROKER_ROLE=SYNC_MASTER
      - ROCKETMQ_FLUSH_DISK_TYPE=ASYNC_FLUSH
      - ROCKETMQ_LOG_LEVEL=INFO
    volumes:
      - broker_a_data:/data/rocketmq
      - broker_a_logs:/var/log/rocketmq
      - ./config/broker-a.conf:/etc/rocketmq/broker-a.conf:ro
    networks:
      - rocketmq-network
    depends_on:
      nameserver:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10911"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Broker-A 从节点
  broker-a-slave:
    image: go-rocketmq:latest
    container_name: rocketmq-broker-a-slave
    command: ["/app/broker", "-c", "/etc/rocketmq/broker-a-slave.conf"]
    ports:
      - "10921:10921"
      - "10922:10922"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - ROCKETMQ_BROKER_NAME=broker-a
      - ROCKETMQ_BROKER_ID=1
      - ROCKETMQ_BROKER_ROLE=SLAVE
      - ROCKETMQ_FLUSH_DISK_TYPE=ASYNC_FLUSH
      - ROCKETMQ_HA_MASTER_ADDRESS=broker-a:10912
      - ROCKETMQ_LOG_LEVEL=INFO
    volumes:
      - broker_a_slave_data:/data/rocketmq
      - broker_a_slave_logs:/var/log/rocketmq
      - ./config/broker-a-slave.conf:/etc/rocketmq/broker-a-slave.conf:ro
    networks:
      - rocketmq-network
    depends_on:
      broker-a:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10921"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Broker-B 主节点
  broker-b:
    image: go-rocketmq:latest
    container_name: rocketmq-broker-b
    command: ["/app/broker", "-c", "/etc/rocketmq/broker-b.conf"]
    ports:
      - "10931:10931"
      - "10932:10932"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - ROCKETMQ_BROKER_NAME=broker-b
      - ROCKETMQ_BROKER_ID=0
      - ROCKETMQ_BROKER_ROLE=SYNC_MASTER
      - ROCKETMQ_FLUSH_DISK_TYPE=ASYNC_FLUSH
      - ROCKETMQ_LOG_LEVEL=INFO
    volumes:
      - broker_b_data:/data/rocketmq
      - broker_b_logs:/var/log/rocketmq
      - ./config/broker-b.conf:/etc/rocketmq/broker-b.conf:ro
    networks:
      - rocketmq-network
    depends_on:
      nameserver:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10931"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Broker-B 从节点
  broker-b-slave:
    image: go-rocketmq:latest
    container_name: rocketmq-broker-b-slave
    command: ["/app/broker", "-c", "/etc/rocketmq/broker-b-slave.conf"]
    ports:
      - "10941:10941"
      - "10942:10942"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - ROCKETMQ_BROKER_NAME=broker-b
      - ROCKETMQ_BROKER_ID=1
      - ROCKETMQ_BROKER_ROLE=SLAVE
      - ROCKETMQ_FLUSH_DISK_TYPE=ASYNC_FLUSH
      - ROCKETMQ_HA_MASTER_ADDRESS=broker-b:10932
      - ROCKETMQ_LOG_LEVEL=INFO
    volumes:
      - broker_b_slave_data:/data/rocketmq
      - broker_b_slave_logs:/var/log/rocketmq
      - ./config/broker-b-slave.conf:/etc/rocketmq/broker-b-slave.conf:ro
    networks:
      - rocketmq-network
    depends_on:
      broker-b:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10941"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 监控服务 (可选)
  monitor:
    image: go-rocketmq-monitor:latest
    container_name: rocketmq-monitor
    ports:
      - "8080:8080"
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - MONITOR_PORT=8080
    networks:
      - rocketmq-network
    depends_on:
      - nameserver
      - broker-a
      - broker-b
    restart: unless-stopped
    profiles:
      - monitoring

  # 示例生产者
  producer-demo:
    image: go-rocketmq:latest
    container_name: rocketmq-producer-demo
    command: ["/app/examples/producer"]
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - PRODUCER_GROUP=demo_producer_group
      - TOPIC_NAME=DemoTopic
      - MESSAGE_COUNT=100
    networks:
      - rocketmq-network
    depends_on:
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy
    restart: "no"
    profiles:
      - demo

  # 示例消费者
  consumer-demo:
    image: go-rocketmq:latest
    container_name: rocketmq-consumer-demo
    command: ["/app/examples/consumer"]
    environment:
      - ROCKETMQ_NAMESERVER_ADDR=nameserver:9876
      - CONSUMER_GROUP=demo_consumer_group
      - TOPIC_NAME=DemoTopic
    networks:
      - rocketmq-network
    depends_on:
      broker-a:
        condition: service_healthy
      broker-b:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - demo

# 网络配置
networks:
  rocketmq-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置
volumes:
  # NameServer
  nameserver_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/nameserver

  # Broker-A 主节点
  broker_a_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/broker-a
  broker_a_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/broker-a

  # Broker-A 从节点
  broker_a_slave_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/broker-a-slave
  broker_a_slave_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/broker-a-slave

  # Broker-B 主节点
  broker_b_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/broker-b
  broker_b_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/broker-b

  # Broker-B 从节点
  broker_b_slave_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/broker-b-slave
  broker_b_slave_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/broker-b-slave